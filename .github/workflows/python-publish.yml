name: publish package

on:
  push:
    tags:
    - 'v*'

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest black
        pip install .

    - name: Check formatting
      id: check_formatting
      run: black --check .
      continue-on-error: true

    - name: Apply formatting (if required)
      if: steps.check_formatting.outcome != 'success'
      run: |
        black .
        git config --global user.name github-actions
        git config --global user.email 'captif-nz@users.noreply.github.com'
        git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/$GITHUB_REPOSITORY
        git checkout $GITHUB_HEAD_REF
        git commit -am "Auto-format Python code"
        git push origin HEAD:$GITHUB_REF

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 100 chars wide
        flake8 . --count --exit-zero --max-complexity=12 --max-line-length=100 --statistics

    - name: Test with pytest
      env:
        RAMM_USERNAME: ${{ secrets.RAMM_USERNAME }}
        RAMM_PASSWORD: ${{ secrets.RAMM_PASSWORD }}
      run: |
        pytest -v tests/

    - name: Install pep517
      run: >-
        python -m
        pip install
        pep517
        --user

    - name: Build a binary wheel and a source tarball
      run: >-
        python -m
        pep517.build
        --source
        --binary
        --out-dir dist/
        .

    - name: Publish distribution ðŸ“¦ to PyPI
      uses: pypa/gh-action-pypi-publish@master
      with:
        password: ${{ secrets.PYPI_KEY }}
